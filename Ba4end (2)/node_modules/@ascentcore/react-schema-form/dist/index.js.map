{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/utils.ts","../src/components/form-element.tsx","../src/ui-schema.ts","../src/components/text-element.tsx","../src/components/file-element.tsx","../src/components/numeric-element.tsx","../src/components/select-element.tsx","../src/components/radio-element.tsx","../src/components/checkbox-element.tsx","../src/components/button-element.tsx","../src/components/multiple-select-element.tsx","../src/components/index.ts","../src/components/element-container.tsx","../src/element-wrapper.tsx","../src/component-registry.tsx","../src/error-formatter.tsx","../src/schema-form.tsx"],"sourcesContent":["export const SCHEMA_KEYWORDS = {\n    PROPERTIES: 'properties',\n    REQUIRED: 'required',\n    CONST: 'const',\n    IF: 'if',\n    BOOLEAN: 'boolean',\n    NUMBER: 'number',\n    INTEGER: 'integer',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    STRING: 'string',\n    MULTIPLE_ENUM: 'multipleEnum',\n    ENUM: 'enum',\n    FILE: 'file',\n    BUTTON: 'button',\n    REMOVE_BUTTON: 'removeButton',\n    ADD_BUTTON: 'addButton'\n}\n","import { SchemaProperty } from './components/form-element'\nimport { SCHEMA_KEYWORDS } from './constants'\n\nexport interface Conditional {\n    compiled: string\n    then?: SchemaProperty\n    else?: SchemaProperty\n}\n\n//checks if item is object\nexport const isObject = (item: any) => {\n    return item && typeof item === SCHEMA_KEYWORDS.OBJECT && !Array.isArray(item)\n}\n\n//merges the current object at all nesting levels with a new one\n//the method does not return a new object; the current one is being altered\nexport const addProperties = (currentObject: any, newProperties: any): any => {\n    if (isObject(currentObject) && isObject(newProperties)) {\n        for (const key in newProperties) {\n            if (isObject(newProperties[key])) {\n                if (!currentObject[key]) {\n                    Object.assign(currentObject, { [key]: {} })\n                }\n                addProperties(currentObject[key], newProperties[key])\n            } else {\n                if (\n                    key === SCHEMA_KEYWORDS.REQUIRED &&\n                    Array.isArray(newProperties[key]) &&\n                    Array.isArray(currentObject[key])\n                ) {\n                    //@ts-ignore\n                    currentObject[key] = [...new Set(currentObject[key].concat(...newProperties[key]))]\n                } else {\n                    Object.assign(currentObject, { [key]: newProperties[key] })\n                }\n            }\n        }\n    }\n}\n\n//gets all conditionals specified at root level of a schema;\n//conditionals that are both specified with simple ifs, or as a list with allOf, anyOf, oneOf\nexport const getConditionals = (schema: SchemaProperty): Conditional[] => {\n    let ifEntries = []\n    const simpleConditional = getSimpleConditional(schema)\n    if (simpleConditional) {\n        ifEntries.push(simpleConditional)\n    }\n    ifEntries = ifEntries.concat(getMultipleConditionals(schema))\n    const compiledIfEntries = ifEntries.map((ifEntry) => getCompiledConditional(ifEntry))\n    let compiledDependencies: Conditional[] = []\n    if (schema.dependencies) {\n        compiledDependencies = getCompiledDependencies(schema.dependencies)\n    }\n    return compiledIfEntries.concat(compiledDependencies)\n}\n\n//given a schema, the function will return a list with all the paths of the schema and the value of the leaf node\n//keywords such as properties and const are not included\n//usage: extract all the conditions specified inside an if statement\nconst getPropertyPathsIfStatement = (schema: any, path = ''): { '0': string; '1': any }[] => {\n    if (isObject(schema)) {\n        return Array.prototype.concat.apply(\n            [],\n            Object.keys(schema).map((key) =>\n                getPropertyPathsIfStatement(\n                    schema[key],\n                    key === SCHEMA_KEYWORDS.PROPERTIES || key === SCHEMA_KEYWORDS.CONST ? path : path + '.' + key\n                )\n            )\n        )\n    } else {\n        return [{ '0': path, '1': schema }]\n    }\n}\n\n//extract conditional from a simple if statement\nconst getSimpleConditional = (schema: SchemaProperty) => {\n    if (schema.if && schema.if.properties) {\n        return {\n            if: getPropertyPathsIfStatement(schema.if!) as { '0': string; '1': any }[],\n            then: schema.then,\n            else: schema.else\n        }\n    } else {\n        return null\n    }\n}\n\n//extract conditionals from array\nconst extractConditionalFromArray = (\n    conditionalSet: SchemaProperty[]\n): {\n    if: { '0': string; '1': any }[]\n    then: SchemaProperty | undefined\n    else: SchemaProperty | undefined\n}[] => {\n    return conditionalSet\n        .filter((entry) => entry.if !== undefined)\n        .map((conditional) => {\n            return {\n                if: getPropertyPathsIfStatement(conditional.if!) as { '0': string; '1': any }[],\n                then: conditional.then,\n                else: conditional.else\n            }\n        })\n}\n\n//extract conditionals from allOf, anyOf, oneOf statements\nconst getMultipleConditionals = (schema: SchemaProperty) => {\n    let multipleConditionals: {\n        if: { '0': string; '1': any }[]\n        then: SchemaProperty | undefined\n        else: SchemaProperty | undefined\n    }[] = []\n    if (schema.allOf) {\n        multipleConditionals = multipleConditionals.concat(extractConditionalFromArray(schema.allOf))\n    }\n    if (schema.anyOf) {\n        multipleConditionals = multipleConditionals.concat(extractConditionalFromArray(schema.anyOf))\n    }\n    if (schema.oneOf) {\n        multipleConditionals = multipleConditionals.concat(extractConditionalFromArray(schema.oneOf))\n    }\n    return multipleConditionals\n}\n\n//constructs string function which will be compiled when needed;\n//rewrites the condition under an if statement as a function\nconst getCompiledConditional = (ifEntry: {\n    if: { '0': string; '1': SchemaProperty }[]\n    then: SchemaProperty | undefined\n    else: SchemaProperty | undefined\n}): Conditional => {\n    const compiled: string = `data => { return (${ifEntry.if\n        .reduce((memo: string[], item: { '0': string; '1': any }) => {\n            return memo.concat([\n                'data' + item[0] + '==' + (typeof item[1] === SCHEMA_KEYWORDS.STRING ? \"'\" + item[1] + \"'\" : item[1])\n            ])\n        }, [])\n        .join(' && ')}) || (${ifEntry.if\n        .reduce((memo: string[], item: { '0': string; '1': any }) => {\n            return memo.concat(['data' + item[0] + '==' + 'undefined'])\n        }, [])\n        .join(' && ')}) }`\n    return {\n        compiled: compiled,\n        ...(ifEntry.then ? { then: ifEntry.then } : {}),\n        ...(ifEntry.else ? { else: ifEntry.else } : {})\n    }\n}\n\nconst getCompiledDependencies = (dependencies: { [key: string]: string[] | SchemaProperty }): Conditional[] => {\n    return Object.entries(dependencies).map((dependency) => {\n        const compiled: string = `data => { return (data.${dependency[0]} !== undefined) }`\n        return {\n            compiled: compiled,\n            ...(Array.isArray(dependency[1]) ? { then: { required: dependency[1] } } : { then: dependency[1] })\n        }\n    })\n}\n","import React, { Fragment, useState, useEffect, ReactNode } from 'react'\nimport { SchemaForm } from '../schema-form'\nimport { addProperties } from '../utils'\nimport ComponentRegistry, { RegistryKeys } from '../component-registry'\nimport { SCHEMA_KEYWORDS } from '../constants'\nimport ajv from 'ajv'\nconst _ = require('lodash')\n\nexport interface SchemaProperty {\n    $ref?: string\n    items?: SchemaProperty\n    type?: string\n    title?: string\n    description?: string\n    properties?: { [key: string]: SchemaProperty }\n    required?: string[]\n    enum?: string[]\n    options?: { [key: string]: string }[]\n    labelKey?: string\n    valueKey?: string\n    minimum?: number\n    maximum?: number\n    default?: any\n    contentEncoding?: string\n    contentMediaType?: string\n    if?: any\n    then?: any\n    else?: any\n    const?: any\n    instanceof?: string\n    definitions?: any\n    allOf?: SchemaProperty[]\n    anyOf?: SchemaProperty[]\n    oneOf?: SchemaProperty[]\n    dependencies?: {\n        [key: string]: string[] | SchemaProperty\n    }\n\n    path?: string\n    registryKey?: string\n    error?: ajv.ErrorObject[] | boolean\n    isRequired?: boolean\n    className?: string\n}\n\ninterface FormElementProperties {\n    root: SchemaProperty\n    parentSchema: any\n    schema: SchemaProperty\n    path: string\n    value: any\n    errors: ajv.ErrorObject[]\n    wrapper?: ReactNode,\n    config?: {\n        registry?: RegistryKeys\n        exceptions?: {\n            paths?: RegistryKeys\n            keys?: RegistryKeys\n        }\n    } | null,\n    error: ajv.ErrorObject[] | boolean\n    handleParentChange: (value: any, childPath: string) => void\n    registry: ComponentRegistry\n}\n\nexport default function FormElement({\n    root,\n    parentSchema,\n    schema,\n    path,\n    value,\n    errors,\n    error,\n    handleParentChange,\n    registry,\n    wrapper,\n    config\n}: FormElementProperties) {\n    const [nestedSchema, setNestedSchema] = useState<SchemaProperty | null>(null)\n\n    useEffect(() => {\n        function processRef($ref: string) {\n            const def = $ref.substr($ref.lastIndexOf('/') + 1)\n            return root.definitions[def]\n        }\n\n        function initializeData() {\n            if (value === undefined) {\n                if (schema.default !== undefined) {\n                    handleParentChange(schema.default, path)\n                } else {\n                    if (schema.type === SCHEMA_KEYWORDS.BOOLEAN) {\n                        handleParentChange(false, path)\n                    }\n                }\n            }\n        }\n\n        const { $ref, items, properties } = schema\n        let newNestedSchema = null\n\n        if (items) {\n            if (items.$ref) {\n                newNestedSchema = _.cloneDeep(processRef(items.$ref))\n            } else if (items.properties) {\n                newNestedSchema = _.cloneDeep(items)\n            }\n        } else {\n            if ($ref) {\n                newNestedSchema = _.cloneDeep(processRef($ref))\n            }\n            if (properties) {\n                if (!$ref) {\n                    newNestedSchema = _.cloneDeep(schema)\n                }\n                addProperties(newNestedSchema, {\n                    properties: schema.properties,\n                    required: schema.required ? schema.required : []\n                })\n            }\n        }\n        setNestedSchema(newNestedSchema)\n\n        initializeData()\n    }, [schema])\n\n    const handleArrayElementRemoval = (index: number) => () => {\n        const newVal = [...value]\n        newVal.splice(index, 1)\n        handleParentChange(newVal, path)\n    }\n\n    function renderNestedSchema(pathKey: string, itemValue: any, index: null | number) {\n        return (\n            <SchemaForm\n                root={root}\n                key={JSON.stringify(nestedSchema)}\n                path={pathKey}\n                schema={nestedSchema}\n                data={itemValue}\n                errors={errors}\n                wrapper={wrapper}\n                config={config}\n                parentChange={(subVal: any, key: string) => {\n                    if (index !== null) {\n                        const copy = [...value]\n                        copy[index] = subVal\n                        handleParentChange(copy, key)\n                    } else {\n                        handleParentChange(subVal, key)\n                    }\n                }}\n            />\n        )\n    }\n\n    function renderPrimitiveArrayItem(itemValue: any, itemProperty: SchemaProperty, index: number) {\n        const registryKey =\n            itemProperty.registryKey ||\n            (itemProperty.enum || itemProperty.options\n                ? SCHEMA_KEYWORDS.ENUM\n                : itemProperty.contentEncoding || itemProperty.contentMediaType\n                ? SCHEMA_KEYWORDS.FILE\n                : itemProperty.type)\n        const pathKey = `${path}[${index}]`\n\n        let arrayElementErrors: ajv.ErrorObject[] | boolean = errors.filter((err) => err.dataPath === pathKey)\n        if (arrayElementErrors && arrayElementErrors.length === 0) {\n            arrayElementErrors = false\n        }\n\n        return registry.getComponent(\n            {\n                ...itemProperty,\n                path: pathKey,\n                registryKey,\n                error: arrayElementErrors,\n                type: registryKey\n            },\n            itemValue,\n            (changedItemValue: string | number | boolean) => {\n                const copy = [...value]\n                copy[index] = changedItemValue\n                handleParentChange(copy, path)\n            },\n            null\n        )\n    }\n\n    function renderArrayOfEnums(itemValue: any, itemProperty: SchemaProperty) {\n        const key = path.substr(path.lastIndexOf('.') + 1)\n        const isRequired = parentSchema.required && parentSchema.required.indexOf(key) > -1\n\n        return registry.getComponent(\n            {\n                enum: itemProperty.enum,\n                path,\n                registryKey: SCHEMA_KEYWORDS.MULTIPLE_ENUM,\n                error,\n                isRequired,\n                title: schema.title,\n                type: SCHEMA_KEYWORDS.ENUM\n            },\n            itemValue,\n            (changedItemValue: string | number | boolean) => handleParentChange(changedItemValue, path),\n            null\n        )\n    }\n\n    function renderArray(itemValue: any) {\n        return (\n            <Fragment>\n                {itemValue &&\n                    itemValue.map((item: any, index: number) => (\n                        <Fragment key={`${path}-${itemValue.length}-${index}`}>\n                            {renderFormElement(item, index)}\n                            {registry.getComponent(\n                                {\n                                    registryKey: SCHEMA_KEYWORDS.REMOVE_BUTTON,\n                                    className: 'ra-remove-button'\n                                },\n                                'Remove item',\n                                handleArrayElementRemoval(index)\n                            )}\n                        </Fragment>\n                    ))}\n                {registry.getComponent(\n                    { registryKey: SCHEMA_KEYWORDS.ADD_BUTTON, className: 'ra-add-button' },\n                    'Add item',\n                    () => {\n                        let emptyChild = {}\n                        if (!nestedSchema && schema.items && schema.items.type) {\n                            switch (schema.items.type) {\n                                case SCHEMA_KEYWORDS.INTEGER:\n                                case SCHEMA_KEYWORDS.NUMBER:\n                                    emptyChild = typeof schema.items.minimum === 'number' ? schema.items.minimum : 0\n                                    break\n                                case SCHEMA_KEYWORDS.BOOLEAN:\n                                    emptyChild = false\n                                    break\n                                default:\n                                    emptyChild = ''\n                            }\n                        }\n                        handleParentChange([...(itemValue || []), emptyChild], path)\n                    }\n                )}\n            </Fragment>\n        )\n    }\n\n    function getElementFromRegistry(itemValue: any, children: ReactNode | null = null, title?: string, type?: string) {\n        const registryKey =\n            schema.registryKey ||\n            (schema.enum || schema.options\n                ? SCHEMA_KEYWORDS.ENUM\n                : schema.contentEncoding || schema.contentMediaType || schema.instanceof === SCHEMA_KEYWORDS.FILE\n                ? SCHEMA_KEYWORDS.FILE\n                : schema.type)\n        const key = path.substr(path.lastIndexOf('.') + 1)\n        const isRequired = parentSchema.required && parentSchema.required.indexOf(key) > -1\n\n        return registry.getComponent(\n            {\n                ...schema,\n                path,\n                registryKey,\n                error,\n                isRequired,\n                title: title || schema.title,\n                type: type || schema.type,\n                contentMediaType:\n                    schema.instanceof === SCHEMA_KEYWORDS.FILE\n                        ? schema.properties!.content.contentMediaType\n                        : schema.contentMediaType\n            },\n            itemValue,\n            (changedItemValue: string | number | boolean) => handleParentChange(changedItemValue, path),\n            children\n        )\n    }\n\n    function renderFormElement(itemValue: any, index: number | null = null) {\n        const typeObjectArrayItem = !!nestedSchema && schema.type === SCHEMA_KEYWORDS.ARRAY && index !== null\n        const typeObjectOrObjectArrayItem =\n            (!!nestedSchema && schema.type !== SCHEMA_KEYWORDS.ARRAY) || typeObjectArrayItem\n\n        const typePrimitiveArrayItem =\n            !nestedSchema &&\n            schema.type === SCHEMA_KEYWORDS.ARRAY &&\n            index !== null &&\n            !!schema.items &&\n            !!schema.items.type\n\n        const typeArray = schema.type === SCHEMA_KEYWORDS.ARRAY && index === null\n        const typeArrayOfEnums =\n            schema.type === SCHEMA_KEYWORDS.ARRAY &&\n            index === null &&\n            schema.items &&\n            schema.items.type === SCHEMA_KEYWORDS.STRING &&\n            schema.items.enum !== undefined\n\n        if (typeObjectOrObjectArrayItem) {\n            const pathKey = index === null ? path : `${path}[${index}]`\n\n            return getElementFromRegistry(\n                itemValue,\n                renderNestedSchema(pathKey, itemValue, index),\n                nestedSchema!.title,\n                typeObjectArrayItem ? nestedSchema!.type : schema.type\n            )\n        } else if (typePrimitiveArrayItem) {\n            return renderPrimitiveArrayItem(itemValue, schema.items!, index!)\n        } else if (typeArrayOfEnums) {\n            return renderArrayOfEnums(itemValue, schema.items!)\n        } else if (typeArray) {\n            const arrayItems: ReactNode = renderArray(itemValue)\n\n            return getElementFromRegistry(itemValue, arrayItems)\n        } else {\n            return getElementFromRegistry(itemValue)\n        }\n    }\n\n    return renderFormElement(value)\n}\n","import Ajv, { ValidateFunction } from 'ajv'\nimport CustomMetaSchema from './custom-meta-schema.json'\n\nconst CLASSES = {\n    file: ['filename', 'content']\n}\n\nexport default class UISchema {\n    schema: any\n    keys: string[]\n    ajv: any\n    validator: ValidateFunction\n    constructor(jsonSchema: any) {\n        this.schema = { ...jsonSchema }\n        this.keys = Object.keys(this.schema.properties || {})\n        this.ajv = new Ajv({ allErrors: true, meta: CustomMetaSchema })\n        this.ajv.addKeyword('instanceof', {\n            type: \"object\",\n            compile: function (schema: string, parentSchema: any) {\n                //@ts-ignore\n                const objectProperties: string[] = CLASSES[schema]\n                if(parentSchema.type !== \"object\"){\n                    throw new Error(`schema is invalid: instanceof attribute should be present on schema of type object`)\n                }\n                if (\n                    !objectProperties.every(function (property) {\n                        return Object.prototype.hasOwnProperty.call(parentSchema.properties || {}, property)\n                    })\n                ) {\n                    throw new Error(`schema is invalid: object instanceof ${schema} is missing one of the fields: ${objectProperties}`)\n                }\n                return function () {\n                    return true\n                }\n            }\n        })\n        this.validator = this.ajv.compile({\n            ...this.schema,\n            $schema: 'https://github.com/ascentcore/react-schema-form/tree/master/src/custom-meta-schema.json#'\n        })\n    }\n\n    validate(data: any): boolean | PromiseLike<any> {\n        return this.validator(data)\n    }\n}\n","import React, { FormEvent } from 'react'\n\ninterface TextElementProperties {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport default function TextElement({\n    value,\n    onChange\n}: TextElementProperties) {\n\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value)\n    }\n\n    return <input type='text' value={value || \"\"} onChange={handleChange} />\n}\n","import React, { FormEvent, CSSProperties } from 'react'\nimport { SchemaProperty } from './form-element'\n\nconst CONTAINER_STYLE: CSSProperties = { position: 'relative' }\nconst FILE_INPUT_STYLE: CSSProperties = { position: 'absolute', opacity: '0', width: '100%' }\n\ninterface FileElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (value: string | { filename: string; content: string }) => void\n}\n\nexport default function FileElement({ property, value, onChange }: FileElementProperties) {\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        const inputElement = event.target as HTMLInputElement\n        if (inputElement.files && inputElement.files.length) {\n            const reader = new FileReader()\n            reader.addEventListener('load', function () {\n                if (reader.result) {\n                    let fileContent =\n                        typeof reader.result === 'string' ? reader.result : Buffer.from(reader.result).toString()\n                    fileContent = fileContent.split(';base64,')[1]\n                    if (property.instanceof === 'file') {\n                        onChange({ filename: inputElement.files![0].name, content: fileContent })\n                    } else {\n                        onChange(fileContent)\n                    }\n                }\n            })\n            reader.readAsDataURL(inputElement.files[0])\n        }\n    }\n    return (\n        <span style={CONTAINER_STYLE}>\n            <input\n                type='file'\n                onChange={handleChange}\n                style={FILE_INPUT_STYLE}\n                {...(property.contentMediaType ? { accept: property.contentMediaType } : {})}\n            />\n            <button>Choose file</button>\n            <span>{value ? ' File uploaded' : ' No file chosen'}</span>\n        </span>\n    )\n}\n","import React, { FormEvent } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface NumericElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (value: number | string) => void\n}\n\nfunction isNumeric(value: string) {\n    return !isNaN(parseInt(value)) || !isNaN(parseFloat(value))\n}\n\nexport default function NumericElement({\n    property,\n    value,\n    onChange\n}: NumericElementProperties) {\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        const { type } = property\n        const { value } = event.target as HTMLInputElement\n        if (isNumeric(value)) {\n            if (type === 'integer') {\n                onChange(parseInt(value))\n            } else {\n                onChange(parseFloat(value))\n            }\n        } else {\n            onChange('')\n        }\n    }\n\n    return (\n        <input\n            type='number'\n            value={value !== undefined ? value : ''}\n            onChange={handleChange}\n        />\n    )\n}\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface SelectElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (event: string) => void\n}\n\nexport default function SelectElement({ property, value, onChange }: SelectElementProperties) {\n    const [options, setOptions] = useState<{ [key: string]: string }[]>([])\n    let [labelKey, valueKey] = [property.labelKey || 'labelKey', property.valueKey || 'valueKey']\n    useEffect(() => {\n        let opts = property.options\n        if (property.enum) {\n            opts = property.enum.map((item: string) => ({\n                labelKey: item,\n                valueKey: item\n            }))\n        } else {\n            labelKey = property.labelKey || labelKey\n            valueKey = property.valueKey || valueKey\n        }\n        opts && setOptions(opts)\n    }, [property])\n\n    const handleChange = (event: FormEvent<HTMLSelectElement>) => {\n        onChange((event.target as HTMLInputElement).value)\n    }\n\n    return (\n        <select onChange={handleChange} value={value !== undefined ? value : ''}>\n            {!value && (\n                <option value='' disabled>\n                    Select your option\n                </option>\n            )}\n            {options.map((opt) => (\n                <option key={opt[labelKey]} value={opt[valueKey]}>\n                    {opt[labelKey]}\n                </option>\n            ))}\n        </select>\n    )\n}\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface RadioElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (event: string) => void\n}\n\nexport default function RadioElement({ property, value, onChange }: RadioElementProperties) {\n    const [options, setOptions] = useState<{ [key: string]: string }[]>([])\n    let [labelKey, valueKey] = [property.labelKey || 'labelKey', property.valueKey || 'valueKey']\n    useEffect(() => {\n        let opts = property.options\n        if (property.enum) {\n            opts = property.enum.map((item: string) => ({\n                labelKey: item,\n                valueKey: item\n            }))\n        } else {\n            labelKey = property.labelKey || labelKey\n            valueKey = property.valueKey || valueKey\n        }\n        opts && setOptions(opts)\n    }, [property])\n\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value)\n    }\n    return (\n        <span>\n            {options.map((opt) => (\n                <div className='radio' key={opt[labelKey]}>\n                    <label>\n                        <input\n                            type='radio'\n                            value={opt[valueKey]}\n                            checked={value === opt[valueKey]}\n                            onChange={handleChange}\n                        />\n                        {` ${opt[valueKey]}`}\n                    </label>\n                </div>\n            ))}\n        </span>\n    )\n}\n","import React, { FormEvent, useEffect } from 'react'\n\ninterface CheckboxElementProperties {\n    value: boolean\n    onChange: (value: boolean) => void\n}\n\nexport default function CheckboxElement({\n    value,\n    onChange\n}: CheckboxElementProperties) {\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).checked)\n    }\n\n    return (\n        <input\n            type='checkbox'\n            value={`${value || false}`}\n            onChange={handleChange}\n            checked={value || false}\n        />\n    )\n}\n","import React, { ReactNode, FormEvent } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface ButtonElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: () => void\n    children: ReactNode\n}\n\nexport default function ButtonElement({\n    property,\n    value,\n    onChange,\n    children\n}: ButtonElementProperties) {\n    return <button className={property.className} onClick={onChange}>{value ? value : children}</button>\n}\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface MultipleSelectElementProperties {\n    property: SchemaProperty\n    value: string[]\n    onChange: (value: string[]) => void\n}\n\nexport default function MultipleSelectElement({ property, value, onChange }: MultipleSelectElementProperties) {\n    const [options, setOptions] = useState<{ [key: string]: string }[]>([])\n    let [labelKey, valueKey] = [property.labelKey || 'labelKey', property.valueKey || 'valueKey']\n    useEffect(() => {\n        let opts = property.options\n        if (property.enum) {\n            opts = property.enum.map((item: string) => ({\n                labelKey: item,\n                valueKey: item\n            }))\n        } else {\n            labelKey = property.labelKey || labelKey\n            valueKey = property.valueKey || valueKey\n        }\n        opts && setOptions(opts)\n    }, [property])\n\n    const handleChange = (event: FormEvent<HTMLSelectElement>) => {\n        const options = (event.target as HTMLSelectElement).options\n        const value = []\n        for (let i = 0, l = options.length; i < l; i++) {\n            if (options[i].selected) {\n                value.push(options[i].value)\n            }\n        }\n        onChange(value)\n    }\n\n    return (\n        <select multiple={true} onChange={handleChange} value={value || []}>\n            <option value='' disabled>\n                Select your options\n            </option>\n            {options.map((opt) => (\n                <option key={opt[labelKey]} value={opt[valueKey]}>\n                    {opt[labelKey]}\n                </option>\n            ))}\n        </select>\n    )\n}\n","import TextElement from './text-element'\nimport FileElement from './file-element'\nimport NumericElement from './numeric-element'\nimport SelectElement from './select-element'\nimport RadioElement from './radio-element'\nimport CheckboxElement from './checkbox-element'\nimport ButtonElement from './button-element'\nimport MultipleSelectElement from './multiple-select-element'\n\nimport { ReactNode } from 'react'\n\nexport const InputElements: { [key: string]: ReactNode } = {\n    TextElement,\n    FileElement,\n    NumericElement,\n    SelectElement,\n    CheckboxElement,\n    ButtonElement,\n    RadioElement,\n    MultipleSelectElement\n}\n","import React, { Fragment, ReactNode } from 'react'\n\ninterface ElementContainerProperties {\n    children: ReactNode\n}\n\nexport default function ElementContainer({\n    children\n}: ElementContainerProperties) {\n    return <Fragment>{children}</Fragment>\n}\n","import React, { ReactNode } from 'react'\nimport { SchemaProperty } from './components/form-element'\n\ninterface ElementWrapperProperties {\n    children: ReactNode\n    property: SchemaProperty\n}\n\nexport default function ElementWrapper({ children, property }: ElementWrapperProperties) {\n    const { type } = property\n    const wrapperClass = `${\n        property.type !== 'object' && property.type !== 'array' ? 'ra-elem-wrapper ' : 'ra-elem-instance'\n    }\n        ra-elem-${property.type}     \n        ${property.error ? 'ra-error' : ''}`\n\n    const labelComponent = () => {\n        if (type !== 'array' && type !== 'object') {\n            return (\n                <label className='ra-form-label'>\n                    {property.title}\n                    {property.isRequired && '*'}\n                </label>\n            )\n        } else {\n            return (\n                <div className='ra-form-title'>\n                    {property.title}\n                    {property.isRequired && '*'}\n                </div>\n            )\n        }\n    }\n\n    return (\n        <span className={wrapperClass}>\n            {labelComponent()}\n            {children}\n            {property.error && (\n                <span className='ra-elem-error-text'>\n                    {typeof property.error !== 'boolean' && property.error[0].message}\n                </span>\n            )}\n        </span>\n    )\n}\n","import React, { ReactNode } from 'react'\n\nimport { InputElements } from './components'\n\nimport ElementContainer from './components/element-container'\n\nimport ElementWrapper from './element-wrapper'\nimport { SchemaProperty } from './components/form-element'\n\nexport interface RegistryKeys {\n    [key: string]: { component?: ReactNode | string; wrapper?: ReactNode }\n}\n\nconst transformStringEntries = (registryEntries: RegistryKeys) => {\n    Object.entries(registryEntries).forEach((registryEntry) => {\n        if (typeof registryEntry[1].component === 'string') {\n            if (InputElements[registryEntry[1].component]) {\n                registryEntry[1].component = InputElements[registryEntry[1].component]\n            } else {\n                registryEntry[1].component = ElementContainer\n            }\n        }\n    })\n}\n\nexport default class ComponentRegistry {\n    _registry: RegistryKeys\n    _wrapper: ReactNode\n    _exceptions: {\n        paths?: RegistryKeys\n        keys?: RegistryKeys\n    }\n\n    constructor(\n        customRegistry: any = {},\n        wrapper: ReactNode = ElementWrapper,\n        exceptions: {\n            paths?: RegistryKeys\n            keys?: RegistryKeys\n        } = { paths: {}, keys: {} }\n    ) {\n        this._registry = {\n            enum: { component: InputElements['SelectElement'], wrapper: wrapper },\n            multipleEnum: { component: InputElements['MultipleSelectElement'], wrapper: wrapper },\n            boolean: { component: InputElements['CheckboxElement'], wrapper: wrapper },\n            number: { component: InputElements['NumericElement'], wrapper: wrapper },\n            integer: { component: InputElements['NumericElement'], wrapper: wrapper },\n            string: { component: InputElements['TextElement'], wrapper: wrapper },\n            file: { component: InputElements['FileElement'], wrapper: wrapper },\n            button: { component: InputElements['ButtonElement'], wrapper: ElementContainer },\n            addButton: { component: InputElements['ButtonElement'], wrapper: ElementContainer },\n            removeButton: { component: InputElements['ButtonElement'], wrapper: ElementContainer }\n        }\n\n        Object.keys(customRegistry).forEach((key: string) => {\n            this._registry[`${key}`] = customRegistry[key]\n        })\n\n        this._wrapper = wrapper\n        this._exceptions = Object.assign({ paths: {}, keys: {} }, exceptions)\n\n        transformStringEntries(this._registry)\n        transformStringEntries(this._exceptions.paths!)\n        transformStringEntries(this._exceptions.keys!)\n    }\n\n    getComponent(\n        property: SchemaProperty,\n        itemValue: any,\n        handleChange: (value: string | number | boolean) => void,\n        children: ReactNode | null = null\n    ) {\n        const props = {\n            property,\n            value: itemValue,\n            onChange: handleChange,\n            children: children\n        }\n\n        const pathException = property.path && this._exceptions.paths![property.path]\n\n        const keyException =\n            property.path && this._exceptions.keys![property.path.substr(property.path.lastIndexOf('.') + 1)]\n\n        const Component: any =\n            (pathException && pathException.component) ||\n            (keyException && keyException.component) ||\n            (this._registry[property.registryKey!] && this._registry[property.registryKey!].component) ||\n            ElementContainer\n\n        const Wrapper: any =\n            (pathException && pathException.wrapper) ||\n            (keyException && keyException.wrapper) ||\n            (this._registry[property.registryKey!] && this._registry[property.registryKey!].wrapper) ||\n            this._wrapper\n\n        return (\n            <Wrapper {...props}>\n                <Component {...props} />\n            </Wrapper>\n        )\n    }\n}\n","import ajv, { LimitParams, PatternParams, ComparisonParams } from 'ajv'\n\nexport interface Formatter {\n    [key: string]: Function\n}\n\nconst formatters: Formatter = {\n    'required': (error: ajv.ErrorObject) => {\n        return 'Field is required'\n    },\n    'minLength': (error: ajv.ErrorObject) => {\n        const params: LimitParams = error.params as LimitParams;\n        return `Field must not exceed ${params.limit} characters`\n    },\n    'maxLength': (error: ajv.ErrorObject) => {\n        const params: LimitParams = error.params as LimitParams;\n        return `Field must bet at least ${params.limit} characters`\n    },\n    'pattern': (error: ajv.ErrorObject) => {\n        const params: PatternParams = error.params as PatternParams;\n        return `Field does not match pattern (${params.pattern})`\n    },\n    'minimum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be at least ${params.limit}`\n    },\n    'maximum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be at most ${params.limit}`\n    },\n    'exclusiveMinimum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be greater than ${params.limit}`\n    },\n    'exclusiveMaximum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be lower than ${params.limit}`\n    },\n    'minItems': (error: ajv.ErrorObject) => {\n        const params: LimitParams = error.params as LimitParams;\n        return `Should not have fewer than ${params.limit} items`\n    },\n    'uniqueItems': (error: ajv.ErrorObject) => {\n        return 'Should not contain duplicate items'\n    }\n}\n\nexport default function formatErrors(errors: ajv.ErrorObject[], customFn: Function | null): ajv.ErrorObject[] {\n\n    if (errors) {\n        errors.forEach((error: ajv.ErrorObject) => {\n            if (customFn) {\n                customFn(error)\n            } else {\n                const { keyword } = error;\n                const formatter: Function = formatters[keyword];\n                if (formatter) {\n                    error.message = formatter(error);\n                }\n            }\n        })\n    }\n\n    return errors\n}","import React, { useState, ReactNode, useEffect } from 'react'\nimport FormElement, { SchemaProperty } from './components/form-element'\nimport { addProperties, getConditionals, isObject, Conditional } from './utils'\nimport UISchema from './ui-schema'\nimport ComponentRegistry, { RegistryKeys } from './component-registry'\nimport ElementWrapper from './element-wrapper'\nimport ajv, { RequiredParams } from 'ajv'\nimport formatErrors from './error-formatter'\nimport { SCHEMA_KEYWORDS } from './constants'\nconst _ = require('lodash')\n\ninterface ConditionalsState {\n    data: Conditional[]\n    lastEvaluations: string\n}\n\nexport const SchemaForm = ({\n    schema,\n    root = schema,\n    wrapper = ElementWrapper,\n    parentChange = null,\n    className,\n    data = {},\n    config = null,\n    onSubmit = () => { },\n    errorFormatter = null,\n    path = '',\n    errors: parentErrors = null\n}: {\n    root?: SchemaProperty | null\n    schema?: SchemaProperty | null\n    wrapper?: ReactNode\n    className?: string\n    parentChange?: ((subVal: any, key: string) => void) | null\n    data?: any\n    config?: {\n        registry?: RegistryKeys\n        exceptions?: {\n            paths?: RegistryKeys\n            keys?: RegistryKeys\n        }\n    } | null\n    onSubmit?: (data: any, errors: ajv.ErrorObject[]) => void\n    errorFormatter?: Function | null\n    path?: string\n    errors?: ajv.ErrorObject[] | null\n}) => {\n    if (!schema) {\n        throw new Error('schema must be provided to the SchemaForm component')\n    }\n\n    const [currentSchema, setCurrentSchema] = useState<SchemaProperty | null>(null)\n    const [obj, setObj] = useState<{ data: any; childPath: null | string }>(\n        Object.assign({}, { data, childPath: null })\n    )\n    const [keys, setKeys] = useState(Object.keys(schema.properties || {}))\n    const [instance] = useState(() => (parentChange ? null : new UISchema(schema)))\n    const [registry] = useState(\n        () =>\n            new ComponentRegistry(\n                config && config.registry ? config.registry : {},\n                wrapper,\n                config && config.exceptions ? config.exceptions : { paths: {}, keys: {} }\n            )\n    )\n    const [errors, setErrors] = useState<ajv.ErrorObject[]>([])\n    const [conditionals] = useState<ConditionalsState>(() => {\n        const data = getConditionals(schema)\n        return { data, lastEvaluations: '' }\n    })\n\n    const removeObjPath = (path: string[], obj: any) => {\n        const prop = path[0]\n        if (path.length > 1) {\n            prop && removeObjPath(path.slice(1), obj ? obj[prop] : null)\n            if (prop && obj && obj[prop] && Object.keys(obj[prop]).length === 0) {\n                delete obj[prop]\n            }\n        } else {\n            if (obj && prop && obj[prop] != undefined) {\n                delete obj[prop]\n            }\n        }\n    }\n\n    const removeProperties = (currentSchema: any, baseSchema: any, nestedPath: string) => {\n        if (isObject(currentSchema) && isObject(baseSchema)) {\n            if (currentSchema.$ref !== undefined) {\n                const def = currentSchema.$ref.substr(currentSchema.$ref.lastIndexOf('/') + 1)\n                root && root.definitions[def] && addProperties(currentSchema, root!.definitions[def])\n            }\n\n            for (const key in baseSchema) {\n                if (!currentSchema[key]) {\n                    handleParentChange(key)(undefined, `${nestedPath}.${key}`, `${nestedPath}.${key}`)\n                } else {\n                    removeProperties(\n                        currentSchema[key],\n                        baseSchema[key],\n                        key !== SCHEMA_KEYWORDS.PROPERTIES ? `${nestedPath}.${key}` : nestedPath\n                    )\n                }\n            }\n        }\n    }\n\n    const removeData = (schema: any, currentData: any) => {\n        if (isObject(schema) && isObject(currentData)) {\n            if (schema.$ref !== undefined) {\n                const def = schema.$ref.substr(schema.$ref.lastIndexOf('/') + 1)\n                root && root.definitions[def] && addProperties(schema, root!.definitions[def])\n            }\n\n            for (const key in currentData) {\n                if (schema.properties && schema.properties[key] === undefined) {\n                    delete currentData[key]\n                } else {\n                    removeData(schema.properties && schema.properties[key], currentData[key])\n                    if (isObject(currentData[key]) && Object.keys(currentData[key]).length === 0) {\n                        delete currentData[key]\n                    }\n                }\n            }\n        }\n    }\n\n    const checkConditionals = (actualSchema: SchemaProperty) => {\n        if (conditionals.data.length) {\n            let lastEvaluation = '',\n                currentEvaluation\n\n            const newSchema = _.cloneDeep(schema)\n            let newData = _.cloneDeep(obj.data)\n\n            let lastEvaluations = ''\n\n            while (lastEvaluation !== currentEvaluation) {\n                currentEvaluation = lastEvaluation\n                lastEvaluation = ''\n                conditionals.data.forEach((conditional: Conditional) => {\n                    try {\n                        const evalCondition = eval(conditional.compiled)(newData)\n                        if (evalCondition) {\n                            addProperties(newSchema, conditional.then)\n                            newData = _.cloneDeep(obj.data)\n                            removeData(newSchema, newData)\n                            lastEvaluation += '1'\n                        } else {\n                            addProperties(newSchema, conditional.else || {})\n                            newData = _.cloneDeep(obj.data)\n                            removeData(newSchema, newData)\n                            lastEvaluation += '2'\n                        }\n                    } catch (err) {\n                        // property does not exist on data;\n                        lastEvaluation += '0'\n                    }\n                })\n                lastEvaluations += lastEvaluation\n            }\n\n            if (lastEvaluations !== conditionals.lastEvaluations) {\n                removeProperties(newSchema, actualSchema, '')\n                setCurrentSchema(newSchema)\n                setKeys(Object.keys(newSchema.properties || {}))\n                conditionals.lastEvaluations = lastEvaluations\n            }\n        }\n    }\n\n    const handleParentChange = (key: string) => (value: any, childPath: string | null, nestedPath?: string) => {\n        if (nestedPath) {\n            setObj((prevObj: any) => {\n                const newObj = Object.assign({}, { ...prevObj })\n                removeObjPath(nestedPath.substr(1).split('.'), newObj.data)\n                return newObj\n            })\n        } else {\n            setObj((prevObj: any) => {\n                const newValue = Object.assign({ childPath }, { data: { ...prevObj.data, [key]: value } })\n                if (\n                    value === undefined ||\n                    value === '' ||\n                    (value && value.constructor === Array && value.length === 0)\n                ) {\n                    delete newValue.data[key]\n                }\n                return newValue\n            })\n        }\n    }\n\n    const handleSubmit = () => {\n        const result = instance!.validate(obj.data)\n        const errors: ajv.ErrorObject[] = result || !instance!.validator.errors ? [] : instance!.validator.errors\n\n        errors.forEach((err, index, object) => {\n            if (err.keyword === SCHEMA_KEYWORDS.IF) {\n                object.splice(index, 1)\n            } else if (err.params && (err.params as RequiredParams).missingProperty) {\n                err.dataPath += `.${(err.params as RequiredParams).missingProperty}`\n            }\n        })\n\n        const formattedErrors: ajv.ErrorObject[] = formatErrors(errors as ajv.ErrorObject[], errorFormatter)\n        setErrors(formattedErrors)\n\n        onSubmit(obj.data, formattedErrors)\n    }\n\n    const getErrors = (path: string) => {\n        const errArr = [...errors, ...(parentErrors || [])]\n        let result: ajv.ErrorObject[] | boolean = errArr.filter((err) => err.dataPath === path)\n\n        if (result && result.length === 0) {\n            result = false\n        }\n\n        return result\n    }\n\n    useEffect(() => {\n        setCurrentSchema(_.cloneDeep(schema))\n        setKeys(Object.keys(schema.properties || {}))\n    }, [schema])\n\n    useEffect(() => {\n        checkConditionals(currentSchema || schema)\n        if (parentChange && obj.childPath) {\n            parentChange(obj.data, obj.childPath)\n        } else {\n            setErrors(errors.filter((item: ajv.ErrorObject) => item.dataPath !== obj.childPath))\n        }\n    }, [obj])\n\n    return (\n        <span className={`${className} ra-schema-form`}>\n            {currentSchema &&\n                keys.map((key) => {\n                    const childPath = `${path}.${key}`\n                    const prop = currentSchema.properties![key]\n                    return (\n                        <FormElement\n                            root={root!}\n                            key={key}                            \n                            config={config}\n                            wrapper={wrapper}\n                            error={getErrors(childPath)}\n                            errors={parentErrors || errors}\n                            value={obj.data ? obj.data[key] : undefined}\n                            schema={prop}\n                            path={childPath}\n                            parentSchema={currentSchema}\n                            handleParentChange={handleParentChange(key)}\n                            registry={registry}\n                        />\n                    )\n                })}\n            {!parentChange &&\n                registry.getComponent(\n                    { registryKey: SCHEMA_KEYWORDS.BUTTON, className: 'ra-submit-button' },\n                    'Submit',\n                    handleSubmit\n                )}\n        </span>\n    )\n}\n"],"names":["SCHEMA_KEYWORDS","PROPERTIES","REQUIRED","CONST","IF","BOOLEAN","NUMBER","INTEGER","ARRAY","OBJECT","STRING","MULTIPLE_ENUM","ENUM","FILE","BUTTON","REMOVE_BUTTON","ADD_BUTTON","isObject","item","Array","isArray","addProperties","currentObject","newProperties","key","Object","assign","Set","concat","getConditionals","schema","ifEntries","simpleConditional","getSimpleConditional","push","getMultipleConditionals","compiledIfEntries","map","ifEntry","getCompiledConditional","compiledDependencies","dependencies","getCompiledDependencies","getPropertyPathsIfStatement","path","prototype","apply","keys","properties","then","extractConditionalFromArray","conditionalSet","filter","entry","undefined","conditional","multipleConditionals","allOf","anyOf","oneOf","compiled","reduce","memo","join","entries","dependency","required","_","require","FormElement","root","parentSchema","value","errors","error","handleParentChange","registry","wrapper","config","useState","nestedSchema","setNestedSchema","useEffect","processRef","$ref","def","substr","lastIndexOf","definitions","initializeData","type","items","newNestedSchema","cloneDeep","handleArrayElementRemoval","index","newVal","splice","renderNestedSchema","pathKey","itemValue","React","SchemaForm","JSON","stringify","data","parentChange","subVal","copy","renderPrimitiveArrayItem","itemProperty","registryKey","options","contentEncoding","contentMediaType","arrayElementErrors","err","dataPath","length","getComponent","changedItemValue","renderArrayOfEnums","isRequired","indexOf","title","renderArray","Fragment","renderFormElement","className","emptyChild","minimum","getElementFromRegistry","children","content","typeObjectArrayItem","typeObjectOrObjectArrayItem","typePrimitiveArrayItem","typeArray","typeArrayOfEnums","arrayItems","CLASSES","file","UISchema","jsonSchema","ajv","Ajv","allErrors","meta","CustomMetaSchema","addKeyword","compile","objectProperties","Error","every","property","hasOwnProperty","call","validator","$schema","validate","TextElement","onChange","handleChange","event","target","CONTAINER_STYLE","position","FILE_INPUT_STYLE","opacity","width","FileElement","inputElement","files","reader","FileReader","addEventListener","result","fileContent","Buffer","from","toString","split","filename","name","readAsDataURL","style","accept","isNumeric","isNaN","parseInt","parseFloat","NumericElement","SelectElement","setOptions","labelKey","valueKey","opts","disabled","opt","RadioElement","checked","CheckboxElement","ButtonElement","onClick","MultipleSelectElement","i","l","selected","multiple","InputElements","ElementContainer","ElementWrapper","wrapperClass","labelComponent","message","transformStringEntries","registryEntries","forEach","registryEntry","component","ComponentRegistry","customRegistry","exceptions","paths","_registry","multipleEnum","number","integer","string","button","addButton","removeButton","_wrapper","_exceptions","props","pathException","keyException","Component","Wrapper","formatters","params","limit","pattern","formatErrors","customFn","keyword","formatter","onSubmit","errorFormatter","parentErrors","currentSchema","setCurrentSchema","childPath","obj","setObj","setKeys","instance","setErrors","lastEvaluations","conditionals","removeObjPath","prop","slice","removeProperties","baseSchema","nestedPath","removeData","currentData","checkConditionals","actualSchema","lastEvaluation","currentEvaluation","newSchema","newData","evalCondition","eval","prevObj","newObj","newValue","constructor","handleSubmit","object","missingProperty","formattedErrors","getErrors","errArr"],"mappings":"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"}