{"version":3,"file":"index.modern.js","sources":["../src/constants.ts","../src/utils.ts","../src/components/form-element.tsx","../src/ui-schema.ts","../src/components/text-element.tsx","../src/components/file-element.tsx","../src/components/numeric-element.tsx","../src/components/select-element.tsx","../src/components/radio-element.tsx","../src/components/checkbox-element.tsx","../src/components/button-element.tsx","../src/components/multiple-select-element.tsx","../src/components/index.ts","../src/components/element-container.tsx","../src/element-wrapper.tsx","../src/component-registry.tsx","../src/error-formatter.tsx","../src/schema-form.tsx"],"sourcesContent":["export const SCHEMA_KEYWORDS = {\n    PROPERTIES: 'properties',\n    REQUIRED: 'required',\n    CONST: 'const',\n    IF: 'if',\n    BOOLEAN: 'boolean',\n    NUMBER: 'number',\n    INTEGER: 'integer',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    STRING: 'string',\n    MULTIPLE_ENUM: 'multipleEnum',\n    ENUM: 'enum',\n    FILE: 'file',\n    BUTTON: 'button',\n    REMOVE_BUTTON: 'removeButton',\n    ADD_BUTTON: 'addButton'\n}\n","import { SchemaProperty } from './components/form-element'\nimport { SCHEMA_KEYWORDS } from './constants'\n\nexport interface Conditional {\n    compiled: string\n    then?: SchemaProperty\n    else?: SchemaProperty\n}\n\n//checks if item is object\nexport const isObject = (item: any) => {\n    return item && typeof item === SCHEMA_KEYWORDS.OBJECT && !Array.isArray(item)\n}\n\n//merges the current object at all nesting levels with a new one\n//the method does not return a new object; the current one is being altered\nexport const addProperties = (currentObject: any, newProperties: any): any => {\n    if (isObject(currentObject) && isObject(newProperties)) {\n        for (const key in newProperties) {\n            if (isObject(newProperties[key])) {\n                if (!currentObject[key]) {\n                    Object.assign(currentObject, { [key]: {} })\n                }\n                addProperties(currentObject[key], newProperties[key])\n            } else {\n                if (\n                    key === SCHEMA_KEYWORDS.REQUIRED &&\n                    Array.isArray(newProperties[key]) &&\n                    Array.isArray(currentObject[key])\n                ) {\n                    //@ts-ignore\n                    currentObject[key] = [...new Set(currentObject[key].concat(...newProperties[key]))]\n                } else {\n                    Object.assign(currentObject, { [key]: newProperties[key] })\n                }\n            }\n        }\n    }\n}\n\n//gets all conditionals specified at root level of a schema;\n//conditionals that are both specified with simple ifs, or as a list with allOf, anyOf, oneOf\nexport const getConditionals = (schema: SchemaProperty): Conditional[] => {\n    let ifEntries = []\n    const simpleConditional = getSimpleConditional(schema)\n    if (simpleConditional) {\n        ifEntries.push(simpleConditional)\n    }\n    ifEntries = ifEntries.concat(getMultipleConditionals(schema))\n    const compiledIfEntries = ifEntries.map((ifEntry) => getCompiledConditional(ifEntry))\n    let compiledDependencies: Conditional[] = []\n    if (schema.dependencies) {\n        compiledDependencies = getCompiledDependencies(schema.dependencies)\n    }\n    return compiledIfEntries.concat(compiledDependencies)\n}\n\n//given a schema, the function will return a list with all the paths of the schema and the value of the leaf node\n//keywords such as properties and const are not included\n//usage: extract all the conditions specified inside an if statement\nconst getPropertyPathsIfStatement = (schema: any, path = ''): { '0': string; '1': any }[] => {\n    if (isObject(schema)) {\n        return Array.prototype.concat.apply(\n            [],\n            Object.keys(schema).map((key) =>\n                getPropertyPathsIfStatement(\n                    schema[key],\n                    key === SCHEMA_KEYWORDS.PROPERTIES || key === SCHEMA_KEYWORDS.CONST ? path : path + '.' + key\n                )\n            )\n        )\n    } else {\n        return [{ '0': path, '1': schema }]\n    }\n}\n\n//extract conditional from a simple if statement\nconst getSimpleConditional = (schema: SchemaProperty) => {\n    if (schema.if && schema.if.properties) {\n        return {\n            if: getPropertyPathsIfStatement(schema.if!) as { '0': string; '1': any }[],\n            then: schema.then,\n            else: schema.else\n        }\n    } else {\n        return null\n    }\n}\n\n//extract conditionals from array\nconst extractConditionalFromArray = (\n    conditionalSet: SchemaProperty[]\n): {\n    if: { '0': string; '1': any }[]\n    then: SchemaProperty | undefined\n    else: SchemaProperty | undefined\n}[] => {\n    return conditionalSet\n        .filter((entry) => entry.if !== undefined)\n        .map((conditional) => {\n            return {\n                if: getPropertyPathsIfStatement(conditional.if!) as { '0': string; '1': any }[],\n                then: conditional.then,\n                else: conditional.else\n            }\n        })\n}\n\n//extract conditionals from allOf, anyOf, oneOf statements\nconst getMultipleConditionals = (schema: SchemaProperty) => {\n    let multipleConditionals: {\n        if: { '0': string; '1': any }[]\n        then: SchemaProperty | undefined\n        else: SchemaProperty | undefined\n    }[] = []\n    if (schema.allOf) {\n        multipleConditionals = multipleConditionals.concat(extractConditionalFromArray(schema.allOf))\n    }\n    if (schema.anyOf) {\n        multipleConditionals = multipleConditionals.concat(extractConditionalFromArray(schema.anyOf))\n    }\n    if (schema.oneOf) {\n        multipleConditionals = multipleConditionals.concat(extractConditionalFromArray(schema.oneOf))\n    }\n    return multipleConditionals\n}\n\n//constructs string function which will be compiled when needed;\n//rewrites the condition under an if statement as a function\nconst getCompiledConditional = (ifEntry: {\n    if: { '0': string; '1': SchemaProperty }[]\n    then: SchemaProperty | undefined\n    else: SchemaProperty | undefined\n}): Conditional => {\n    const compiled: string = `data => { return (${ifEntry.if\n        .reduce((memo: string[], item: { '0': string; '1': any }) => {\n            return memo.concat([\n                'data' + item[0] + '==' + (typeof item[1] === SCHEMA_KEYWORDS.STRING ? \"'\" + item[1] + \"'\" : item[1])\n            ])\n        }, [])\n        .join(' && ')}) || (${ifEntry.if\n        .reduce((memo: string[], item: { '0': string; '1': any }) => {\n            return memo.concat(['data' + item[0] + '==' + 'undefined'])\n        }, [])\n        .join(' && ')}) }`\n    return {\n        compiled: compiled,\n        ...(ifEntry.then ? { then: ifEntry.then } : {}),\n        ...(ifEntry.else ? { else: ifEntry.else } : {})\n    }\n}\n\nconst getCompiledDependencies = (dependencies: { [key: string]: string[] | SchemaProperty }): Conditional[] => {\n    return Object.entries(dependencies).map((dependency) => {\n        const compiled: string = `data => { return (data.${dependency[0]} !== undefined) }`\n        return {\n            compiled: compiled,\n            ...(Array.isArray(dependency[1]) ? { then: { required: dependency[1] } } : { then: dependency[1] })\n        }\n    })\n}\n","import React, { Fragment, useState, useEffect, ReactNode } from 'react'\nimport { SchemaForm } from '../schema-form'\nimport { addProperties } from '../utils'\nimport ComponentRegistry, { RegistryKeys } from '../component-registry'\nimport { SCHEMA_KEYWORDS } from '../constants'\nimport ajv from 'ajv'\nconst _ = require('lodash')\n\nexport interface SchemaProperty {\n    $ref?: string\n    items?: SchemaProperty\n    type?: string\n    title?: string\n    description?: string\n    properties?: { [key: string]: SchemaProperty }\n    required?: string[]\n    enum?: string[]\n    options?: { [key: string]: string }[]\n    labelKey?: string\n    valueKey?: string\n    minimum?: number\n    maximum?: number\n    default?: any\n    contentEncoding?: string\n    contentMediaType?: string\n    if?: any\n    then?: any\n    else?: any\n    const?: any\n    instanceof?: string\n    definitions?: any\n    allOf?: SchemaProperty[]\n    anyOf?: SchemaProperty[]\n    oneOf?: SchemaProperty[]\n    dependencies?: {\n        [key: string]: string[] | SchemaProperty\n    }\n\n    path?: string\n    registryKey?: string\n    error?: ajv.ErrorObject[] | boolean\n    isRequired?: boolean\n    className?: string\n}\n\ninterface FormElementProperties {\n    root: SchemaProperty\n    parentSchema: any\n    schema: SchemaProperty\n    path: string\n    value: any\n    errors: ajv.ErrorObject[]\n    wrapper?: ReactNode,\n    config?: {\n        registry?: RegistryKeys\n        exceptions?: {\n            paths?: RegistryKeys\n            keys?: RegistryKeys\n        }\n    } | null,\n    error: ajv.ErrorObject[] | boolean\n    handleParentChange: (value: any, childPath: string) => void\n    registry: ComponentRegistry\n}\n\nexport default function FormElement({\n    root,\n    parentSchema,\n    schema,\n    path,\n    value,\n    errors,\n    error,\n    handleParentChange,\n    registry,\n    wrapper,\n    config\n}: FormElementProperties) {\n    const [nestedSchema, setNestedSchema] = useState<SchemaProperty | null>(null)\n\n    useEffect(() => {\n        function processRef($ref: string) {\n            const def = $ref.substr($ref.lastIndexOf('/') + 1)\n            return root.definitions[def]\n        }\n\n        function initializeData() {\n            if (value === undefined) {\n                if (schema.default !== undefined) {\n                    handleParentChange(schema.default, path)\n                } else {\n                    if (schema.type === SCHEMA_KEYWORDS.BOOLEAN) {\n                        handleParentChange(false, path)\n                    }\n                }\n            }\n        }\n\n        const { $ref, items, properties } = schema\n        let newNestedSchema = null\n\n        if (items) {\n            if (items.$ref) {\n                newNestedSchema = _.cloneDeep(processRef(items.$ref))\n            } else if (items.properties) {\n                newNestedSchema = _.cloneDeep(items)\n            }\n        } else {\n            if ($ref) {\n                newNestedSchema = _.cloneDeep(processRef($ref))\n            }\n            if (properties) {\n                if (!$ref) {\n                    newNestedSchema = _.cloneDeep(schema)\n                }\n                addProperties(newNestedSchema, {\n                    properties: schema.properties,\n                    required: schema.required ? schema.required : []\n                })\n            }\n        }\n        setNestedSchema(newNestedSchema)\n\n        initializeData()\n    }, [schema])\n\n    const handleArrayElementRemoval = (index: number) => () => {\n        const newVal = [...value]\n        newVal.splice(index, 1)\n        handleParentChange(newVal, path)\n    }\n\n    function renderNestedSchema(pathKey: string, itemValue: any, index: null | number) {\n        return (\n            <SchemaForm\n                root={root}\n                key={JSON.stringify(nestedSchema)}\n                path={pathKey}\n                schema={nestedSchema}\n                data={itemValue}\n                errors={errors}\n                wrapper={wrapper}\n                config={config}\n                parentChange={(subVal: any, key: string) => {\n                    if (index !== null) {\n                        const copy = [...value]\n                        copy[index] = subVal\n                        handleParentChange(copy, key)\n                    } else {\n                        handleParentChange(subVal, key)\n                    }\n                }}\n            />\n        )\n    }\n\n    function renderPrimitiveArrayItem(itemValue: any, itemProperty: SchemaProperty, index: number) {\n        const registryKey =\n            itemProperty.registryKey ||\n            (itemProperty.enum || itemProperty.options\n                ? SCHEMA_KEYWORDS.ENUM\n                : itemProperty.contentEncoding || itemProperty.contentMediaType\n                ? SCHEMA_KEYWORDS.FILE\n                : itemProperty.type)\n        const pathKey = `${path}[${index}]`\n\n        let arrayElementErrors: ajv.ErrorObject[] | boolean = errors.filter((err) => err.dataPath === pathKey)\n        if (arrayElementErrors && arrayElementErrors.length === 0) {\n            arrayElementErrors = false\n        }\n\n        return registry.getComponent(\n            {\n                ...itemProperty,\n                path: pathKey,\n                registryKey,\n                error: arrayElementErrors,\n                type: registryKey\n            },\n            itemValue,\n            (changedItemValue: string | number | boolean) => {\n                const copy = [...value]\n                copy[index] = changedItemValue\n                handleParentChange(copy, path)\n            },\n            null\n        )\n    }\n\n    function renderArrayOfEnums(itemValue: any, itemProperty: SchemaProperty) {\n        const key = path.substr(path.lastIndexOf('.') + 1)\n        const isRequired = parentSchema.required && parentSchema.required.indexOf(key) > -1\n\n        return registry.getComponent(\n            {\n                enum: itemProperty.enum,\n                path,\n                registryKey: SCHEMA_KEYWORDS.MULTIPLE_ENUM,\n                error,\n                isRequired,\n                title: schema.title,\n                type: SCHEMA_KEYWORDS.ENUM\n            },\n            itemValue,\n            (changedItemValue: string | number | boolean) => handleParentChange(changedItemValue, path),\n            null\n        )\n    }\n\n    function renderArray(itemValue: any) {\n        return (\n            <Fragment>\n                {itemValue &&\n                    itemValue.map((item: any, index: number) => (\n                        <Fragment key={`${path}-${itemValue.length}-${index}`}>\n                            {renderFormElement(item, index)}\n                            {registry.getComponent(\n                                {\n                                    registryKey: SCHEMA_KEYWORDS.REMOVE_BUTTON,\n                                    className: 'ra-remove-button'\n                                },\n                                'Remove item',\n                                handleArrayElementRemoval(index)\n                            )}\n                        </Fragment>\n                    ))}\n                {registry.getComponent(\n                    { registryKey: SCHEMA_KEYWORDS.ADD_BUTTON, className: 'ra-add-button' },\n                    'Add item',\n                    () => {\n                        let emptyChild = {}\n                        if (!nestedSchema && schema.items && schema.items.type) {\n                            switch (schema.items.type) {\n                                case SCHEMA_KEYWORDS.INTEGER:\n                                case SCHEMA_KEYWORDS.NUMBER:\n                                    emptyChild = typeof schema.items.minimum === 'number' ? schema.items.minimum : 0\n                                    break\n                                case SCHEMA_KEYWORDS.BOOLEAN:\n                                    emptyChild = false\n                                    break\n                                default:\n                                    emptyChild = ''\n                            }\n                        }\n                        handleParentChange([...(itemValue || []), emptyChild], path)\n                    }\n                )}\n            </Fragment>\n        )\n    }\n\n    function getElementFromRegistry(itemValue: any, children: ReactNode | null = null, title?: string, type?: string) {\n        const registryKey =\n            schema.registryKey ||\n            (schema.enum || schema.options\n                ? SCHEMA_KEYWORDS.ENUM\n                : schema.contentEncoding || schema.contentMediaType || schema.instanceof === SCHEMA_KEYWORDS.FILE\n                ? SCHEMA_KEYWORDS.FILE\n                : schema.type)\n        const key = path.substr(path.lastIndexOf('.') + 1)\n        const isRequired = parentSchema.required && parentSchema.required.indexOf(key) > -1\n\n        return registry.getComponent(\n            {\n                ...schema,\n                path,\n                registryKey,\n                error,\n                isRequired,\n                title: title || schema.title,\n                type: type || schema.type,\n                contentMediaType:\n                    schema.instanceof === SCHEMA_KEYWORDS.FILE\n                        ? schema.properties!.content.contentMediaType\n                        : schema.contentMediaType\n            },\n            itemValue,\n            (changedItemValue: string | number | boolean) => handleParentChange(changedItemValue, path),\n            children\n        )\n    }\n\n    function renderFormElement(itemValue: any, index: number | null = null) {\n        const typeObjectArrayItem = !!nestedSchema && schema.type === SCHEMA_KEYWORDS.ARRAY && index !== null\n        const typeObjectOrObjectArrayItem =\n            (!!nestedSchema && schema.type !== SCHEMA_KEYWORDS.ARRAY) || typeObjectArrayItem\n\n        const typePrimitiveArrayItem =\n            !nestedSchema &&\n            schema.type === SCHEMA_KEYWORDS.ARRAY &&\n            index !== null &&\n            !!schema.items &&\n            !!schema.items.type\n\n        const typeArray = schema.type === SCHEMA_KEYWORDS.ARRAY && index === null\n        const typeArrayOfEnums =\n            schema.type === SCHEMA_KEYWORDS.ARRAY &&\n            index === null &&\n            schema.items &&\n            schema.items.type === SCHEMA_KEYWORDS.STRING &&\n            schema.items.enum !== undefined\n\n        if (typeObjectOrObjectArrayItem) {\n            const pathKey = index === null ? path : `${path}[${index}]`\n\n            return getElementFromRegistry(\n                itemValue,\n                renderNestedSchema(pathKey, itemValue, index),\n                nestedSchema!.title,\n                typeObjectArrayItem ? nestedSchema!.type : schema.type\n            )\n        } else if (typePrimitiveArrayItem) {\n            return renderPrimitiveArrayItem(itemValue, schema.items!, index!)\n        } else if (typeArrayOfEnums) {\n            return renderArrayOfEnums(itemValue, schema.items!)\n        } else if (typeArray) {\n            const arrayItems: ReactNode = renderArray(itemValue)\n\n            return getElementFromRegistry(itemValue, arrayItems)\n        } else {\n            return getElementFromRegistry(itemValue)\n        }\n    }\n\n    return renderFormElement(value)\n}\n","import Ajv, { ValidateFunction } from 'ajv'\nimport CustomMetaSchema from './custom-meta-schema.json'\n\nconst CLASSES = {\n    file: ['filename', 'content']\n}\n\nexport default class UISchema {\n    schema: any\n    keys: string[]\n    ajv: any\n    validator: ValidateFunction\n    constructor(jsonSchema: any) {\n        this.schema = { ...jsonSchema }\n        this.keys = Object.keys(this.schema.properties || {})\n        this.ajv = new Ajv({ allErrors: true, meta: CustomMetaSchema })\n        this.ajv.addKeyword('instanceof', {\n            type: \"object\",\n            compile: function (schema: string, parentSchema: any) {\n                //@ts-ignore\n                const objectProperties: string[] = CLASSES[schema]\n                if(parentSchema.type !== \"object\"){\n                    throw new Error(`schema is invalid: instanceof attribute should be present on schema of type object`)\n                }\n                if (\n                    !objectProperties.every(function (property) {\n                        return Object.prototype.hasOwnProperty.call(parentSchema.properties || {}, property)\n                    })\n                ) {\n                    throw new Error(`schema is invalid: object instanceof ${schema} is missing one of the fields: ${objectProperties}`)\n                }\n                return function () {\n                    return true\n                }\n            }\n        })\n        this.validator = this.ajv.compile({\n            ...this.schema,\n            $schema: 'https://github.com/ascentcore/react-schema-form/tree/master/src/custom-meta-schema.json#'\n        })\n    }\n\n    validate(data: any): boolean | PromiseLike<any> {\n        return this.validator(data)\n    }\n}\n","import React, { FormEvent } from 'react'\n\ninterface TextElementProperties {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport default function TextElement({\n    value,\n    onChange\n}: TextElementProperties) {\n\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value)\n    }\n\n    return <input type='text' value={value || \"\"} onChange={handleChange} />\n}\n","import React, { FormEvent, CSSProperties } from 'react'\nimport { SchemaProperty } from './form-element'\n\nconst CONTAINER_STYLE: CSSProperties = { position: 'relative' }\nconst FILE_INPUT_STYLE: CSSProperties = { position: 'absolute', opacity: '0', width: '100%' }\n\ninterface FileElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (value: string | { filename: string; content: string }) => void\n}\n\nexport default function FileElement({ property, value, onChange }: FileElementProperties) {\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        const inputElement = event.target as HTMLInputElement\n        if (inputElement.files && inputElement.files.length) {\n            const reader = new FileReader()\n            reader.addEventListener('load', function () {\n                if (reader.result) {\n                    let fileContent =\n                        typeof reader.result === 'string' ? reader.result : Buffer.from(reader.result).toString()\n                    fileContent = fileContent.split(';base64,')[1]\n                    if (property.instanceof === 'file') {\n                        onChange({ filename: inputElement.files![0].name, content: fileContent })\n                    } else {\n                        onChange(fileContent)\n                    }\n                }\n            })\n            reader.readAsDataURL(inputElement.files[0])\n        }\n    }\n    return (\n        <span style={CONTAINER_STYLE}>\n            <input\n                type='file'\n                onChange={handleChange}\n                style={FILE_INPUT_STYLE}\n                {...(property.contentMediaType ? { accept: property.contentMediaType } : {})}\n            />\n            <button>Choose file</button>\n            <span>{value ? ' File uploaded' : ' No file chosen'}</span>\n        </span>\n    )\n}\n","import React, { FormEvent } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface NumericElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (value: number | string) => void\n}\n\nfunction isNumeric(value: string) {\n    return !isNaN(parseInt(value)) || !isNaN(parseFloat(value))\n}\n\nexport default function NumericElement({\n    property,\n    value,\n    onChange\n}: NumericElementProperties) {\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        const { type } = property\n        const { value } = event.target as HTMLInputElement\n        if (isNumeric(value)) {\n            if (type === 'integer') {\n                onChange(parseInt(value))\n            } else {\n                onChange(parseFloat(value))\n            }\n        } else {\n            onChange('')\n        }\n    }\n\n    return (\n        <input\n            type='number'\n            value={value !== undefined ? value : ''}\n            onChange={handleChange}\n        />\n    )\n}\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface SelectElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (event: string) => void\n}\n\nexport default function SelectElement({ property, value, onChange }: SelectElementProperties) {\n    const [options, setOptions] = useState<{ [key: string]: string }[]>([])\n    let [labelKey, valueKey] = [property.labelKey || 'labelKey', property.valueKey || 'valueKey']\n    useEffect(() => {\n        let opts = property.options\n        if (property.enum) {\n            opts = property.enum.map((item: string) => ({\n                labelKey: item,\n                valueKey: item\n            }))\n        } else {\n            labelKey = property.labelKey || labelKey\n            valueKey = property.valueKey || valueKey\n        }\n        opts && setOptions(opts)\n    }, [property])\n\n    const handleChange = (event: FormEvent<HTMLSelectElement>) => {\n        onChange((event.target as HTMLInputElement).value)\n    }\n\n    return (\n        <select onChange={handleChange} value={value !== undefined ? value : ''}>\n            {!value && (\n                <option value='' disabled>\n                    Select your option\n                </option>\n            )}\n            {options.map((opt) => (\n                <option key={opt[labelKey]} value={opt[valueKey]}>\n                    {opt[labelKey]}\n                </option>\n            ))}\n        </select>\n    )\n}\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface RadioElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: (event: string) => void\n}\n\nexport default function RadioElement({ property, value, onChange }: RadioElementProperties) {\n    const [options, setOptions] = useState<{ [key: string]: string }[]>([])\n    let [labelKey, valueKey] = [property.labelKey || 'labelKey', property.valueKey || 'valueKey']\n    useEffect(() => {\n        let opts = property.options\n        if (property.enum) {\n            opts = property.enum.map((item: string) => ({\n                labelKey: item,\n                valueKey: item\n            }))\n        } else {\n            labelKey = property.labelKey || labelKey\n            valueKey = property.valueKey || valueKey\n        }\n        opts && setOptions(opts)\n    }, [property])\n\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).value)\n    }\n    return (\n        <span>\n            {options.map((opt) => (\n                <div className='radio' key={opt[labelKey]}>\n                    <label>\n                        <input\n                            type='radio'\n                            value={opt[valueKey]}\n                            checked={value === opt[valueKey]}\n                            onChange={handleChange}\n                        />\n                        {` ${opt[valueKey]}`}\n                    </label>\n                </div>\n            ))}\n        </span>\n    )\n}\n","import React, { FormEvent, useEffect } from 'react'\n\ninterface CheckboxElementProperties {\n    value: boolean\n    onChange: (value: boolean) => void\n}\n\nexport default function CheckboxElement({\n    value,\n    onChange\n}: CheckboxElementProperties) {\n    const handleChange = (event: FormEvent<HTMLInputElement>) => {\n        onChange((event.target as HTMLInputElement).checked)\n    }\n\n    return (\n        <input\n            type='checkbox'\n            value={`${value || false}`}\n            onChange={handleChange}\n            checked={value || false}\n        />\n    )\n}\n","import React, { ReactNode, FormEvent } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface ButtonElementProperties {\n    property: SchemaProperty\n    value: string\n    onChange: () => void\n    children: ReactNode\n}\n\nexport default function ButtonElement({\n    property,\n    value,\n    onChange,\n    children\n}: ButtonElementProperties) {\n    return <button className={property.className} onClick={onChange}>{value ? value : children}</button>\n}\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { SchemaProperty } from './form-element'\n\ninterface MultipleSelectElementProperties {\n    property: SchemaProperty\n    value: string[]\n    onChange: (value: string[]) => void\n}\n\nexport default function MultipleSelectElement({ property, value, onChange }: MultipleSelectElementProperties) {\n    const [options, setOptions] = useState<{ [key: string]: string }[]>([])\n    let [labelKey, valueKey] = [property.labelKey || 'labelKey', property.valueKey || 'valueKey']\n    useEffect(() => {\n        let opts = property.options\n        if (property.enum) {\n            opts = property.enum.map((item: string) => ({\n                labelKey: item,\n                valueKey: item\n            }))\n        } else {\n            labelKey = property.labelKey || labelKey\n            valueKey = property.valueKey || valueKey\n        }\n        opts && setOptions(opts)\n    }, [property])\n\n    const handleChange = (event: FormEvent<HTMLSelectElement>) => {\n        const options = (event.target as HTMLSelectElement).options\n        const value = []\n        for (let i = 0, l = options.length; i < l; i++) {\n            if (options[i].selected) {\n                value.push(options[i].value)\n            }\n        }\n        onChange(value)\n    }\n\n    return (\n        <select multiple={true} onChange={handleChange} value={value || []}>\n            <option value='' disabled>\n                Select your options\n            </option>\n            {options.map((opt) => (\n                <option key={opt[labelKey]} value={opt[valueKey]}>\n                    {opt[labelKey]}\n                </option>\n            ))}\n        </select>\n    )\n}\n","import TextElement from './text-element'\nimport FileElement from './file-element'\nimport NumericElement from './numeric-element'\nimport SelectElement from './select-element'\nimport RadioElement from './radio-element'\nimport CheckboxElement from './checkbox-element'\nimport ButtonElement from './button-element'\nimport MultipleSelectElement from './multiple-select-element'\n\nimport { ReactNode } from 'react'\n\nexport const InputElements: { [key: string]: ReactNode } = {\n    TextElement,\n    FileElement,\n    NumericElement,\n    SelectElement,\n    CheckboxElement,\n    ButtonElement,\n    RadioElement,\n    MultipleSelectElement\n}\n","import React, { Fragment, ReactNode } from 'react'\n\ninterface ElementContainerProperties {\n    children: ReactNode\n}\n\nexport default function ElementContainer({\n    children\n}: ElementContainerProperties) {\n    return <Fragment>{children}</Fragment>\n}\n","import React, { ReactNode } from 'react'\nimport { SchemaProperty } from './components/form-element'\n\ninterface ElementWrapperProperties {\n    children: ReactNode\n    property: SchemaProperty\n}\n\nexport default function ElementWrapper({ children, property }: ElementWrapperProperties) {\n    const { type } = property\n    const wrapperClass = `${\n        property.type !== 'object' && property.type !== 'array' ? 'ra-elem-wrapper ' : 'ra-elem-instance'\n    }\n        ra-elem-${property.type}     \n        ${property.error ? 'ra-error' : ''}`\n\n    const labelComponent = () => {\n        if (type !== 'array' && type !== 'object') {\n            return (\n                <label className='ra-form-label'>\n                    {property.title}\n                    {property.isRequired && '*'}\n                </label>\n            )\n        } else {\n            return (\n                <div className='ra-form-title'>\n                    {property.title}\n                    {property.isRequired && '*'}\n                </div>\n            )\n        }\n    }\n\n    return (\n        <span className={wrapperClass}>\n            {labelComponent()}\n            {children}\n            {property.error && (\n                <span className='ra-elem-error-text'>\n                    {typeof property.error !== 'boolean' && property.error[0].message}\n                </span>\n            )}\n        </span>\n    )\n}\n","import React, { ReactNode } from 'react'\n\nimport { InputElements } from './components'\n\nimport ElementContainer from './components/element-container'\n\nimport ElementWrapper from './element-wrapper'\nimport { SchemaProperty } from './components/form-element'\n\nexport interface RegistryKeys {\n    [key: string]: { component?: ReactNode | string; wrapper?: ReactNode }\n}\n\nconst transformStringEntries = (registryEntries: RegistryKeys) => {\n    Object.entries(registryEntries).forEach((registryEntry) => {\n        if (typeof registryEntry[1].component === 'string') {\n            if (InputElements[registryEntry[1].component]) {\n                registryEntry[1].component = InputElements[registryEntry[1].component]\n            } else {\n                registryEntry[1].component = ElementContainer\n            }\n        }\n    })\n}\n\nexport default class ComponentRegistry {\n    _registry: RegistryKeys\n    _wrapper: ReactNode\n    _exceptions: {\n        paths?: RegistryKeys\n        keys?: RegistryKeys\n    }\n\n    constructor(\n        customRegistry: any = {},\n        wrapper: ReactNode = ElementWrapper,\n        exceptions: {\n            paths?: RegistryKeys\n            keys?: RegistryKeys\n        } = { paths: {}, keys: {} }\n    ) {\n        this._registry = {\n            enum: { component: InputElements['SelectElement'], wrapper: wrapper },\n            multipleEnum: { component: InputElements['MultipleSelectElement'], wrapper: wrapper },\n            boolean: { component: InputElements['CheckboxElement'], wrapper: wrapper },\n            number: { component: InputElements['NumericElement'], wrapper: wrapper },\n            integer: { component: InputElements['NumericElement'], wrapper: wrapper },\n            string: { component: InputElements['TextElement'], wrapper: wrapper },\n            file: { component: InputElements['FileElement'], wrapper: wrapper },\n            button: { component: InputElements['ButtonElement'], wrapper: ElementContainer },\n            addButton: { component: InputElements['ButtonElement'], wrapper: ElementContainer },\n            removeButton: { component: InputElements['ButtonElement'], wrapper: ElementContainer }\n        }\n\n        Object.keys(customRegistry).forEach((key: string) => {\n            this._registry[`${key}`] = customRegistry[key]\n        })\n\n        this._wrapper = wrapper\n        this._exceptions = Object.assign({ paths: {}, keys: {} }, exceptions)\n\n        transformStringEntries(this._registry)\n        transformStringEntries(this._exceptions.paths!)\n        transformStringEntries(this._exceptions.keys!)\n    }\n\n    getComponent(\n        property: SchemaProperty,\n        itemValue: any,\n        handleChange: (value: string | number | boolean) => void,\n        children: ReactNode | null = null\n    ) {\n        const props = {\n            property,\n            value: itemValue,\n            onChange: handleChange,\n            children: children\n        }\n\n        const pathException = property.path && this._exceptions.paths![property.path]\n\n        const keyException =\n            property.path && this._exceptions.keys![property.path.substr(property.path.lastIndexOf('.') + 1)]\n\n        const Component: any =\n            (pathException && pathException.component) ||\n            (keyException && keyException.component) ||\n            (this._registry[property.registryKey!] && this._registry[property.registryKey!].component) ||\n            ElementContainer\n\n        const Wrapper: any =\n            (pathException && pathException.wrapper) ||\n            (keyException && keyException.wrapper) ||\n            (this._registry[property.registryKey!] && this._registry[property.registryKey!].wrapper) ||\n            this._wrapper\n\n        return (\n            <Wrapper {...props}>\n                <Component {...props} />\n            </Wrapper>\n        )\n    }\n}\n","import ajv, { LimitParams, PatternParams, ComparisonParams } from 'ajv'\n\nexport interface Formatter {\n    [key: string]: Function\n}\n\nconst formatters: Formatter = {\n    'required': (error: ajv.ErrorObject) => {\n        return 'Field is required'\n    },\n    'minLength': (error: ajv.ErrorObject) => {\n        const params: LimitParams = error.params as LimitParams;\n        return `Field must not exceed ${params.limit} characters`\n    },\n    'maxLength': (error: ajv.ErrorObject) => {\n        const params: LimitParams = error.params as LimitParams;\n        return `Field must bet at least ${params.limit} characters`\n    },\n    'pattern': (error: ajv.ErrorObject) => {\n        const params: PatternParams = error.params as PatternParams;\n        return `Field does not match pattern (${params.pattern})`\n    },\n    'minimum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be at least ${params.limit}`\n    },\n    'maximum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be at most ${params.limit}`\n    },\n    'exclusiveMinimum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be greater than ${params.limit}`\n    },\n    'exclusiveMaximum': (error: ajv.ErrorObject) => {\n        const params: ComparisonParams = error.params as ComparisonParams;\n        return `Value should be lower than ${params.limit}`\n    },\n    'minItems': (error: ajv.ErrorObject) => {\n        const params: LimitParams = error.params as LimitParams;\n        return `Should not have fewer than ${params.limit} items`\n    },\n    'uniqueItems': (error: ajv.ErrorObject) => {\n        return 'Should not contain duplicate items'\n    }\n}\n\nexport default function formatErrors(errors: ajv.ErrorObject[], customFn: Function | null): ajv.ErrorObject[] {\n\n    if (errors) {\n        errors.forEach((error: ajv.ErrorObject) => {\n            if (customFn) {\n                customFn(error)\n            } else {\n                const { keyword } = error;\n                const formatter: Function = formatters[keyword];\n                if (formatter) {\n                    error.message = formatter(error);\n                }\n            }\n        })\n    }\n\n    return errors\n}","import React, { useState, ReactNode, useEffect } from 'react'\nimport FormElement, { SchemaProperty } from './components/form-element'\nimport { addProperties, getConditionals, isObject, Conditional } from './utils'\nimport UISchema from './ui-schema'\nimport ComponentRegistry, { RegistryKeys } from './component-registry'\nimport ElementWrapper from './element-wrapper'\nimport ajv, { RequiredParams } from 'ajv'\nimport formatErrors from './error-formatter'\nimport { SCHEMA_KEYWORDS } from './constants'\nconst _ = require('lodash')\n\ninterface ConditionalsState {\n    data: Conditional[]\n    lastEvaluations: string\n}\n\nexport const SchemaForm = ({\n    schema,\n    root = schema,\n    wrapper = ElementWrapper,\n    parentChange = null,\n    className,\n    data = {},\n    config = null,\n    onSubmit = () => { },\n    errorFormatter = null,\n    path = '',\n    errors: parentErrors = null\n}: {\n    root?: SchemaProperty | null\n    schema?: SchemaProperty | null\n    wrapper?: ReactNode\n    className?: string\n    parentChange?: ((subVal: any, key: string) => void) | null\n    data?: any\n    config?: {\n        registry?: RegistryKeys\n        exceptions?: {\n            paths?: RegistryKeys\n            keys?: RegistryKeys\n        }\n    } | null\n    onSubmit?: (data: any, errors: ajv.ErrorObject[]) => void\n    errorFormatter?: Function | null\n    path?: string\n    errors?: ajv.ErrorObject[] | null\n}) => {\n    if (!schema) {\n        throw new Error('schema must be provided to the SchemaForm component')\n    }\n\n    const [currentSchema, setCurrentSchema] = useState<SchemaProperty | null>(null)\n    const [obj, setObj] = useState<{ data: any; childPath: null | string }>(\n        Object.assign({}, { data, childPath: null })\n    )\n    const [keys, setKeys] = useState(Object.keys(schema.properties || {}))\n    const [instance] = useState(() => (parentChange ? null : new UISchema(schema)))\n    const [registry] = useState(\n        () =>\n            new ComponentRegistry(\n                config && config.registry ? config.registry : {},\n                wrapper,\n                config && config.exceptions ? config.exceptions : { paths: {}, keys: {} }\n            )\n    )\n    const [errors, setErrors] = useState<ajv.ErrorObject[]>([])\n    const [conditionals] = useState<ConditionalsState>(() => {\n        const data = getConditionals(schema)\n        return { data, lastEvaluations: '' }\n    })\n\n    const removeObjPath = (path: string[], obj: any) => {\n        const prop = path[0]\n        if (path.length > 1) {\n            prop && removeObjPath(path.slice(1), obj ? obj[prop] : null)\n            if (prop && obj && obj[prop] && Object.keys(obj[prop]).length === 0) {\n                delete obj[prop]\n            }\n        } else {\n            if (obj && prop && obj[prop] != undefined) {\n                delete obj[prop]\n            }\n        }\n    }\n\n    const removeProperties = (currentSchema: any, baseSchema: any, nestedPath: string) => {\n        if (isObject(currentSchema) && isObject(baseSchema)) {\n            if (currentSchema.$ref !== undefined) {\n                const def = currentSchema.$ref.substr(currentSchema.$ref.lastIndexOf('/') + 1)\n                root && root.definitions[def] && addProperties(currentSchema, root!.definitions[def])\n            }\n\n            for (const key in baseSchema) {\n                if (!currentSchema[key]) {\n                    handleParentChange(key)(undefined, `${nestedPath}.${key}`, `${nestedPath}.${key}`)\n                } else {\n                    removeProperties(\n                        currentSchema[key],\n                        baseSchema[key],\n                        key !== SCHEMA_KEYWORDS.PROPERTIES ? `${nestedPath}.${key}` : nestedPath\n                    )\n                }\n            }\n        }\n    }\n\n    const removeData = (schema: any, currentData: any) => {\n        if (isObject(schema) && isObject(currentData)) {\n            if (schema.$ref !== undefined) {\n                const def = schema.$ref.substr(schema.$ref.lastIndexOf('/') + 1)\n                root && root.definitions[def] && addProperties(schema, root!.definitions[def])\n            }\n\n            for (const key in currentData) {\n                if (schema.properties && schema.properties[key] === undefined) {\n                    delete currentData[key]\n                } else {\n                    removeData(schema.properties && schema.properties[key], currentData[key])\n                    if (isObject(currentData[key]) && Object.keys(currentData[key]).length === 0) {\n                        delete currentData[key]\n                    }\n                }\n            }\n        }\n    }\n\n    const checkConditionals = (actualSchema: SchemaProperty) => {\n        if (conditionals.data.length) {\n            let lastEvaluation = '',\n                currentEvaluation\n\n            const newSchema = _.cloneDeep(schema)\n            let newData = _.cloneDeep(obj.data)\n\n            let lastEvaluations = ''\n\n            while (lastEvaluation !== currentEvaluation) {\n                currentEvaluation = lastEvaluation\n                lastEvaluation = ''\n                conditionals.data.forEach((conditional: Conditional) => {\n                    try {\n                        const evalCondition = eval(conditional.compiled)(newData)\n                        if (evalCondition) {\n                            addProperties(newSchema, conditional.then)\n                            newData = _.cloneDeep(obj.data)\n                            removeData(newSchema, newData)\n                            lastEvaluation += '1'\n                        } else {\n                            addProperties(newSchema, conditional.else || {})\n                            newData = _.cloneDeep(obj.data)\n                            removeData(newSchema, newData)\n                            lastEvaluation += '2'\n                        }\n                    } catch (err) {\n                        // property does not exist on data;\n                        lastEvaluation += '0'\n                    }\n                })\n                lastEvaluations += lastEvaluation\n            }\n\n            if (lastEvaluations !== conditionals.lastEvaluations) {\n                removeProperties(newSchema, actualSchema, '')\n                setCurrentSchema(newSchema)\n                setKeys(Object.keys(newSchema.properties || {}))\n                conditionals.lastEvaluations = lastEvaluations\n            }\n        }\n    }\n\n    const handleParentChange = (key: string) => (value: any, childPath: string | null, nestedPath?: string) => {\n        if (nestedPath) {\n            setObj((prevObj: any) => {\n                const newObj = Object.assign({}, { ...prevObj })\n                removeObjPath(nestedPath.substr(1).split('.'), newObj.data)\n                return newObj\n            })\n        } else {\n            setObj((prevObj: any) => {\n                const newValue = Object.assign({ childPath }, { data: { ...prevObj.data, [key]: value } })\n                if (\n                    value === undefined ||\n                    value === '' ||\n                    (value && value.constructor === Array && value.length === 0)\n                ) {\n                    delete newValue.data[key]\n                }\n                return newValue\n            })\n        }\n    }\n\n    const handleSubmit = () => {\n        const result = instance!.validate(obj.data)\n        const errors: ajv.ErrorObject[] = result || !instance!.validator.errors ? [] : instance!.validator.errors\n\n        errors.forEach((err, index, object) => {\n            if (err.keyword === SCHEMA_KEYWORDS.IF) {\n                object.splice(index, 1)\n            } else if (err.params && (err.params as RequiredParams).missingProperty) {\n                err.dataPath += `.${(err.params as RequiredParams).missingProperty}`\n            }\n        })\n\n        const formattedErrors: ajv.ErrorObject[] = formatErrors(errors as ajv.ErrorObject[], errorFormatter)\n        setErrors(formattedErrors)\n\n        onSubmit(obj.data, formattedErrors)\n    }\n\n    const getErrors = (path: string) => {\n        const errArr = [...errors, ...(parentErrors || [])]\n        let result: ajv.ErrorObject[] | boolean = errArr.filter((err) => err.dataPath === path)\n\n        if (result && result.length === 0) {\n            result = false\n        }\n\n        return result\n    }\n\n    useEffect(() => {\n        setCurrentSchema(_.cloneDeep(schema))\n        setKeys(Object.keys(schema.properties || {}))\n    }, [schema])\n\n    useEffect(() => {\n        checkConditionals(currentSchema || schema)\n        if (parentChange && obj.childPath) {\n            parentChange(obj.data, obj.childPath)\n        } else {\n            setErrors(errors.filter((item: ajv.ErrorObject) => item.dataPath !== obj.childPath))\n        }\n    }, [obj])\n\n    return (\n        <span className={`${className} ra-schema-form`}>\n            {currentSchema &&\n                keys.map((key) => {\n                    const childPath = `${path}.${key}`\n                    const prop = currentSchema.properties![key]\n                    return (\n                        <FormElement\n                            root={root!}\n                            key={key}                            \n                            config={config}\n                            wrapper={wrapper}\n                            error={getErrors(childPath)}\n                            errors={parentErrors || errors}\n                            value={obj.data ? obj.data[key] : undefined}\n                            schema={prop}\n                            path={childPath}\n                            parentSchema={currentSchema}\n                            handleParentChange={handleParentChange(key)}\n                            registry={registry}\n                        />\n                    )\n                })}\n            {!parentChange &&\n                registry.getComponent(\n                    { registryKey: SCHEMA_KEYWORDS.BUTTON, className: 'ra-submit-button' },\n                    'Submit',\n                    handleSubmit\n                )}\n        </span>\n    )\n}\n"],"names":["SCHEMA_KEYWORDS","PROPERTIES","REQUIRED","CONST","IF","BOOLEAN","NUMBER","INTEGER","ARRAY","OBJECT","STRING","MULTIPLE_ENUM","ENUM","FILE","BUTTON","REMOVE_BUTTON","ADD_BUTTON","isObject","item","Array","isArray","addProperties","currentObject","newProperties","key","Object","assign","Set","concat","getConditionals","schema","ifEntries","simpleConditional","getSimpleConditional","push","getMultipleConditionals","compiledIfEntries","map","ifEntry","getCompiledConditional","compiledDependencies","dependencies","getCompiledDependencies","getPropertyPathsIfStatement","path","prototype","apply","keys","if","properties","then","else","extractConditionalFromArray","conditionalSet","filter","entry","undefined","conditional","multipleConditionals","allOf","anyOf","oneOf","compiled","reduce","memo","join","entries","dependency","required","_","require","FormElement","root","parentSchema","value","errors","error","handleParentChange","registry","wrapper","config","nestedSchema","setNestedSchema","useState","useEffect","processRef","$ref","def","substr","lastIndexOf","definitions","initializeData","default","type","items","newNestedSchema","cloneDeep","handleArrayElementRemoval","index","newVal","splice","renderNestedSchema","pathKey","itemValue","React","SchemaForm","JSON","stringify","data","parentChange","subVal","copy","renderPrimitiveArrayItem","itemProperty","registryKey","enum","options","contentEncoding","contentMediaType","arrayElementErrors","err","dataPath","length","getComponent","changedItemValue","renderArrayOfEnums","isRequired","indexOf","title","renderArray","Fragment","renderFormElement","className","emptyChild","minimum","getElementFromRegistry","children","instanceof","content","typeObjectArrayItem","typeObjectOrObjectArrayItem","typePrimitiveArrayItem","typeArray","typeArrayOfEnums","arrayItems","CLASSES","file","UISchema","constructor","jsonSchema","ajv","Ajv","allErrors","meta","CustomMetaSchema","addKeyword","compile","objectProperties","Error","every","property","hasOwnProperty","call","validator","$schema","validate","TextElement","onChange","handleChange","event","target","CONTAINER_STYLE","position","FILE_INPUT_STYLE","opacity","width","FileElement","inputElement","files","reader","FileReader","addEventListener","result","fileContent","Buffer","from","toString","split","filename","name","readAsDataURL","style","accept","isNumeric","isNaN","parseInt","parseFloat","NumericElement","SelectElement","setOptions","labelKey","valueKey","opts","disabled","opt","RadioElement","checked","CheckboxElement","ButtonElement","onClick","MultipleSelectElement","i","l","selected","multiple","InputElements","ElementContainer","ElementWrapper","wrapperClass","labelComponent","message","transformStringEntries","registryEntries","forEach","registryEntry","component","ComponentRegistry","customRegistry","exceptions","paths","_registry","multipleEnum","boolean","number","integer","string","button","addButton","removeButton","_wrapper","_exceptions","props","pathException","keyException","Component","Wrapper","formatters","params","limit","pattern","formatErrors","customFn","keyword","formatter","onSubmit","errorFormatter","parentErrors","currentSchema","setCurrentSchema","obj","setObj","childPath","setKeys","instance","setErrors","conditionals","lastEvaluations","removeObjPath","prop","slice","removeProperties","baseSchema","nestedPath","removeData","currentData","checkConditionals","actualSchema","lastEvaluation","currentEvaluation","newSchema","newData","evalCondition","eval","prevObj","newObj","newValue","handleSubmit","object","missingProperty","formattedErrors","getErrors","errArr"],"mappings":"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"}